basePath: /api/v1
definitions:
  models.AddTag:
    properties:
      color:
        example: FFFFFF
        type: string
      name:
        example: tag name
        type: string
    type: object
  models.AddTask:
    properties:
      projectId:
        example: 550e8400-e29b-41d4-a716-446655440000
        format: uuid
        type: string
      taskDescription:
        example: example task
        type: string
      taskTitle:
        example: task name
        type: string
    type: object
  models.Project:
    properties:
      creationDate:
        format: datetime
        type: string
      description:
        example: example
        type: string
      id:
        example: 550e8400-e29b-41d4-a716-446655440000
        format: uuid
        type: string
      name:
        example: project name
        type: string
      ownerId:
        example: 550e8400-e29b-41d4-a716-446655440000
        format: uuid
        type: string
      parentId:
        example: 550e8400-e29b-41d4-a716-44665544000
        format: uuid
        type: string
    type: object
  models.Tag:
    properties:
      color:
        example: FFFFFF
        type: string
      id:
        example: 550e8400-e29b-41d4-a716-446655440000
        format: uuid
        type: string
      name:
        example: tag name
        type: string
    type: object
  models.Task:
    properties:
      id:
        example: 550e8400-e29b-41d4-a716-446655440000
        format: uuid
        type: string
      projectId:
        example: 550e8400-e29b-41d4-a716-446655440000
        format: uuid
        type: string
      taskDescription:
        example: example task
        type: string
      taskTitle:
        example: task name
        type: string
    type: object
  models.UpdateProject:
    properties:
      description:
        example: example
        type: string
      id:
        example: 550e8400-e29b-41d4-a716-446655440000
        format: uuid
        type: string
      name:
        example: project name
        type: string
      ownerId:
        example: 550e8400-e29b-41d4-a716-446655440000
        format: uuid
        type: string
      parentId:
        example: 550e8400-e29b-41d4-a716-44665544000
        format: uuid
        type: string
    type: object
  models.UpdateTag:
    properties:
      color:
        example: FFFFFF
        type: string
      id:
        example: f40312cd-5995-ec11-b909-0242ac120002
        format: uuid
        type: string
      name:
        example: tag name
        type: string
    type: object
  models.UpdateTask:
    properties:
      id:
        example: 550e8400-e29b-41d4-a716-446655440000
        format: uuid
        type: string
      projectId:
        example: 550e8400-e29b-41d4-a716-446655440000
        format: uuid
        type: string
      taskDescription:
        example: example task
        type: string
      taskTitle:
        example: task name
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
paths:
  /:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: healthy
          schema:
            type: string
      summary: Health check
      tags:
      - General
  /project/:
    delete:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Delete project with provided id
      tags:
      - Project
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Project'
            type: array
      summary: Get all projects
      tags:
      - Project
    patch:
      consumes:
      - application/json
      parameters:
      - description: update project
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/models.UpdateProject'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Project'
      summary: update project with provided id
      tags:
      - Project
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Create tag
      tags:
      - Project
  /tag/:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Tag'
            type: array
      summary: Get all tags
      tags:
      - Tag
    post:
      consumes:
      - application/json
      parameters:
      - description: add tag
        in: body
        name: tag
        required: true
        schema:
          $ref: '#/definitions/models.AddTag'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Tag'
      summary: Create tag
      tags:
      - Tag
  /tag/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: tag id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Delete tag
      tags:
      - Tag
    get:
      consumes:
      - application/json
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Tag'
            type: array
      summary: Get tags by task
      tags:
      - Tag
    patch:
      consumes:
      - application/json
      parameters:
      - description: update tag
        in: body
        name: tag
        required: true
        schema:
          $ref: '#/definitions/models.UpdateTag'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Tag'
      summary: Update tag
      tags:
      - Tag
  /task/:
    delete:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Delete task with provided id
      tags:
      - Task
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Task'
            type: array
      summary: Get all tasks
      tags:
      - Task
    patch:
      consumes:
      - application/json
      parameters:
      - description: update task
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/models.UpdateTask'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Task'
      summary: update tag with provided id
      tags:
      - Task
    post:
      consumes:
      - application/json
      parameters:
      - description: add task
        in: body
        name: tag
        required: true
        schema:
          $ref: '#/definitions/models.AddTask'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Create tag
      tags:
      - Task
swagger: "2.0"
